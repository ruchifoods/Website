@using FoodDeliveryApp.ViewModels.Common
@model List<FoodDeliveryApp.Models.MenuItem>
@{
    ViewBag.Title = "Manage Address";
    Layout = "~/Views/Shared/_RestaurantOwnerLayout.cshtml";
    int counter = 3;
    var foodTypeList = Enum.GetValues(typeof(FoodTypeOrder)).Cast<FoodTypeOrder>().ToList();
    var foodTypeHeadingIndex = 0;
}
<style>
    .container {
        xdisplay: flex;
        justify-content: space-evenly;
    }

    .veg-badge-container {
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px solid green;
        height: 20px;
        width: 20px;
    }

    .non-veg-badge-container {
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px solid #e43b4f;
        height: 20px;
        width: 20px;
    }

    .circle {
        position: absolute;
        background-color: green;
        border-radius: 50%;
        height: 15px;
        width: 15px;
    }

    .triangle {
        position: absolute;
        width: 0;
        height: 0;
        border-radius: 2px;
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        border-bottom: 10px solid #e43b4f;
    }
</style>
<div class="container mt-5">
    <div class="card shadow">
        <div class="card-header bg-primary text-white text-center">
            <h3 class="mb-0">Manage Your Menus</h3>
            <small>Review or update your menu details below to ensure that your menus information is always current and accurate.</small>
        </div>
        <!-- Success Message Alert -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="row">
                <div class="col-12">
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["SuccessMessage"]
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
            </div>
        }

        ﻿<div>
            <div class="col-12">
                @if ((Model != null) && (Model.Count > 0))
                {
                    <div class="container mt-4">
                        @for (int f = 0; f < foodTypeList.Count; f++)
                        {
                            var foodType = foodTypeList[f];
                            @for (int i = 0; i < Model.Count();)
                            {
                                <div class="row d-flex align-items-stretch" style="margin-bottom: 1rem;">
                                    @while ((counter != 0) && (i < Model.Count()))
                                    {
                                        if (Model[i].FoodType.Name == foodType.ToString())
                                        {
                                            counter = counter - 1;
                                            @if (f == foodTypeHeadingIndex)
                                            {
                                                <div style="width: 100%;">
                                                    <h3 class="mb-4 text-center">@foodType.ToString()</h3>
                                                </div>
                                                foodTypeHeadingIndex++;
                                            }
                                            <div class="col-4">
                                                <div class="card mb-4 shadow-sm h-100">
                                                    <img src="@Model[i].ImageUrl" class="card-img-top" style="height: 200px; object-fit: cover;" alt="@Model[i].ItemName" />
                                                    <div class="card-body">
                                                        @if (Model[i].IsVeg)
                                                        {
                                                            <p>
                                                                <div class="veg-badge-container">
                                                                    <span class="circle" />
                                                                </div>
                                                            </p>
                                                        }
                                                        else
                                                        {
                                                            <p>
                                                                <div class="non-veg-badge-container">
                                                                    <span class="triangle" />
                                                                </div>
                                                            </p>
                                                        }
                                                        <h5 class="card-title">@Model[i].ItemName</h5>
                                                        <p class="card-text">@Model[i].Description </p>
                                                        <p class="card-text">@Model[i].Price </p>
                                                        @if (Model[i].IsAvailable)
                                                        {
                                                            <p class="card-text">Available</p>
                                                        }
                                                        else
                                                        {
                                                            <p class="card-text">Not Available</p>
                                                        }

                                                        <input type="hidden" value="@Model[i].MenuItemId" id="menuItemId" name="menuItemId" />
                                                        <input type="hidden" value="@Model[i].MenuCategoryId" id="MenuCategoryId" name="MenuCategoryId" />
                                                        <input type="hidden" value="@Model[i].ItemName" id="ItemName" name="ItemName" />
                                                        <input type="hidden" value="@Model[i].Description" id="Description" name="Description" />
                                                        <input type="hidden" value="@Model[i].Price" id="Price" name="Price" />
                                                        <input type="hidden" value="@Model[i].IsVeg" id="IsVeg" name="IsVeg" />
                                                        <input type="hidden" value="@Model[i].IsAvailable" id="IsAvailable" name="IsAvailable" />
                                                        <input type="hidden" value="@Model[i].ImageUrl" id="ImageUrl" name="ImageUrl" />

                                                        <div class="text-right">
                                                            <a href="@Url.Action("ShowMenuItem", "RestaurantOwnerAccount", new { menuItemId = Model[i].MenuItemId})" class="btn btn-primary">
                                                                Edit Menu
                                                            </a>
                                                        </div>
                                                        <div class="text-right" style="padding-top: 1rem;">
                                                            <a href="@Url.Action("DeleteMenuItem", "RestaurantOwnerAccount", new { menuItemId = Model[i].MenuItemId})" class="btn btn-danger">
                                                                Delete Menu
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        i++;
                                    }
                                    @if (f == foodTypeHeadingIndex)
                                    {
                                        foodTypeHeadingIndex++;
                                    }
                                </div>
                                counter = 3;
                            }
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <h5 class="alert-heading">
                            <i class="bi bi-exclamation-circle-fill me-2"></i> No Menu Found
                        </h5>
                        <p>
                            It looks like you haven't added any menu yet. Please add your menu details to receive orders.
                        </p>
                        <hr />
                    </div>
                }
                <div class="d-flex justify-content-end" style="padding: 1rem;">
                    <a href="@Url.Action("ShowMenuItem", "RestaurantOwnerAccount", new { menuItemId = -1 })" class="btn btn-primary">
                        Add Menu
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
